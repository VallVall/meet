{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","peer","firestore","SIZE","App","React","useState","v4","uniqName","videoRef","useRef","remoteVideoRef","video","setVideo","calling","setCalling","iceCandidatesRef","collection","useCollectionData","iceCandidates","offersRef","offers","answersRef","answers","savedOffers","useEffect","RTCPeerConnection","iceServers","urls","addEventListener","candidate","add","name","JSON","stringify","streams","stream","current","srcObject","forEach","offer","setRemoteDescription","parse","createAnswer","then","answer","setLocalDescription","length","includes","filter","item","console","log","addIceCandidate","CssBaseline","Grid","container","justify","spacing","xs","style","background","position","width","top","right","autoPlay","ref","height","Button","variant","color","onClick","navigator","mediaDevices","getUserMedia","audio","getTracks","track","addTrack","disabled","createOffer","offerToReceiveVideo","offerToReceiveAudio","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f4bc36a.chunk.js","sourcesContent":["import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport { v4 } from \"uuid\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBnx4aisChaY4rOJp4EBkJLL0Y-3pdSACc\",\n  authDomain: \"webrtc-meet-5675f.firebaseapp.com\",\n  projectId: \"webrtc-meet-5675f\",\n  storageBucket: \"webrtc-meet-5675f.appspot.com\",\n  messagingSenderId: \"830666454636\",\n  appId: \"1:830666454636:web:6430c0c3d1184037158a49\",\n});\n\n// const auth = firebase.auth();\nconst firestore = firebase.firestore();\n// const analytics = firebase.analytics();\n\nconst SIZE = 300;\n\nlet peer;\n// let imCaller = false;\n\nexport const App = () => {\n  const [uniqName] = React.useState(v4());\n  const videoRef = React.useRef(null);\n  const remoteVideoRef = React.useRef(null);\n  const [video, setVideo] = React.useState(false);\n  const [calling, setCalling] = React.useState(false);\n\n  const iceCandidatesRef = firestore.collection(\"iceCandidates\");\n  const [iceCandidates] = useCollectionData(iceCandidatesRef);\n\n  const offersRef = firestore.collection(\"offers\");\n  const [offers] = useCollectionData(offersRef);\n\n  const answersRef = firestore.collection(\"answers\");\n  const [answers] = useCollectionData(answersRef);\n\n  const [savedOffers, setSavedOffers] = React.useState([]);\n\n  const handleShowCamera = () => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        if (!videoRef.current) return;\n\n        videoRef.current.srcObject = stream;\n        stream.getTracks().forEach((track) => {\n          peer.addTrack(track, stream);\n        });\n        setVideo(true);\n      });\n  };\n\n  const handleCall = () =>\n    peer\n      .createOffer({ offerToReceiveVideo: true, offerToReceiveAudio: true })\n      .then((offer) => {\n        peer.setLocalDescription(offer).then(() => {\n          setCalling(true);\n          offersRef.add({\n            name: uniqName,\n            offer: JSON.stringify(offer),\n          });\n        });\n      });\n\n  const handleSaveOffers = () => {\n    if (!offers) return;\n\n    offers.forEach(({ name, offer }) => {\n      if (name === uniqName) {\n        // console.log(\"My offer\");\n        return;\n      }\n\n      // console.log(\"save remote offer\");\n      peer.setRemoteDescription(JSON.parse(offer));\n\n      peer.createAnswer().then((answer) => {\n        peer.setLocalDescription(answer);\n        answersRef.add({\n          name: uniqName,\n          offer: JSON.stringify(answer),\n        });\n      });\n    });\n  };\n\n  const handleSaveAnswers = () => {\n    if (!answers) return;\n\n    answers.forEach(({ name, offer }) => {\n      if (name === uniqName) {\n        // console.log(\"My answer\");\n        return;\n      }\n\n      if (savedOffers.includes(name)) {\n        // console.log(\"Already exist\");\n        return;\n      }\n\n      // console.log(\"save remote answer\");\n      peer.setRemoteDescription(JSON.parse(offer));\n\n      // if (imCaller) return;\n\n      // peer.createAnswer().then((answer) => {\n      //   console.log(\"create and store locale answer\");\n      //   peer.setLocalDescription(answer);\n      //   console.log(\"send answer\");\n      //   setSavedOffers((array) => {\n      //     answersRef.add({\n      //       name: uniqName,\n      //       offer: JSON.stringify(answer),\n      //     });\n\n      //     return [...array, name];\n      //   });\n      // });\n    });\n  };\n\n  const handleSaveIceCandidates = () => {\n    if (!iceCandidates) return;\n\n    iceCandidates\n      .filter(({ name }) => name !== uniqName)\n      .forEach((item) => {\n        console.log(`item.name: ${item.name}, my.name${uniqName}`);\n        peer.addIceCandidate(JSON.parse(item.candidate));\n      });\n  };\n\n  const handleAddNewConnection = () => {\n    peer = new RTCPeerConnection({\n      iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }],\n    });\n\n    peer.addEventListener(\"icecandidate\", ({ candidate }) => {\n      if (candidate) {\n        // console.log(\"sendIceCandidate\", JSON.stringify(candidate, null, 2));\n        iceCandidatesRef.add({\n          name: uniqName,\n          candidate: JSON.stringify(candidate),\n        });\n      }\n    });\n\n    peer.addEventListener(\"track\", ({ streams }) => {\n      const [stream] = streams;\n      if (!remoteVideoRef.current) return;\n\n      // console.log(\"added remote video stream\", stream);\n      // console.log(\"remoteVideoRef\", remoteVideoRef);\n      remoteVideoRef.current.srcObject = stream;\n    });\n  };\n\n  React.useEffect(handleAddNewConnection, []);\n  React.useEffect(handleSaveOffers, [offers?.length]);\n  React.useEffect(handleSaveAnswers, [answers?.length]);\n  React.useEffect(handleSaveIceCandidates, [iceCandidates?.length]);\n\n  return (\n    <div>\n      <CssBaseline />\n      <Grid container justify=\"center\" spacing={2}>\n        <Grid item xs={12} container justify=\"center\">\n          <div\n            style={{\n              background: \"black\",\n              position: \"relative\",\n              width: \"fit-content\",\n            }}\n          >\n            <div\n              style={{\n                background: \"gray\",\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n              }}\n            >\n              <video\n                autoPlay\n                ref={remoteVideoRef}\n                style={{ width: SIZE / 3, height: SIZE / 3 }}\n              />\n            </div>\n            <video\n              autoPlay\n              ref={videoRef}\n              style={{ width: SIZE, height: SIZE }}\n            />\n          </div>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleShowCamera}\n            disabled={video}\n          >\n            Connect camera\n          </Button>\n        </Grid>\n        <Grid item xs=\"auto\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleCall}\n            disabled={!video || calling}\n          >\n            Call\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}